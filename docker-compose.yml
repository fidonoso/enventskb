
services:
  nginx-proxy-manager:
    container_name: nxginx_proxy_manager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

    environment:
        # Mysql/Maria connection parameters:
        DB_MYSQL_HOST: "mysql"
        DB_MYSQL_PORT: 3307
        DB_MYSQL_USER: ${DB_MYSQL_USER}
        DB_MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
        DB_MYSQL_NAME:  ${DB_MYSQL_NAME}
    depends_on:
      - mysql
    networks:
      devops_net: 
        aliases:
          - nginx-proxy-manager

  # mariadb para nginx proxy manager
  mysql:
    image: 'jc21/mariadb-aria:latest'
    container_name: mysqldb
    restart: unless-stopped
    ports:
      - "3307:3306" 
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MARIADB_AUTO_UPGRADE: '1'
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      devops_net: 
        aliases:
          - mysqldb

  db:
    image: postgres:16
    restart: always
    container_name: pg16
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      devops_net: 
        aliases:
          - pg16


  #pgadmin4
  pgadmin:
    image: dpage/pgadmin4:8.8
    container_name: pgadmin4_container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "user@kb.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      
    ports:
      - 4002:80
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      devops_net: 
        aliases:
          - pgadmin4


  #app EventsKB
  springboot-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot-app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    networks:
      devops_net: 
        aliases:
          - app


volumes:
  postgres_data: {}
  pgadmin_data: {}
  mysql: {}
  letsencrypt: {}
  data: {}


networks:
  devops_net:
    name: devops_net
    driver: bridge
    ipam:
      driver: default